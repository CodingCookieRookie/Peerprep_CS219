apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
    cloud.google.com/neg-status: '{"network_endpoint_groups":{"80":"k8s1-ad716a6e-default-web-service-80-b6064fa1"},"zones":["asia-southeast1-a"]}'
  creationTimestamp: "2021-11-09T22:22:30Z"
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: web
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:externalTrafficPolicy: {}
        f:ports:
          .: {}
          k:{"port":80,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":443,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
          k:{"port":3000,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
        f:selector:
          .: {}
          f:app: {}
        f:sessionAffinity: {}
        f:type: {}
    manager: GoogleCloudConsole
    operation: Update
    time: "2021-11-09T22:22:30Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:finalizers:
          .: {}
          v:"service.kubernetes.io/load-balancer-cleanup": {}
      f:status:
        f:loadBalancer:
          f:ingress: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-11-09T22:23:14Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:cloud.google.com/neg-status: {}
    manager: glbc
    operation: Update
    time: "2021-11-09T23:20:14Z"
  name: web-service
  namespace: default
  resourceVersion: "82733"
  uid: 36592128-b08c-420c-9204-6d3d9e2e2480
spec:
  clusterIP: 10.40.9.235
  clusterIPs:
  - 10.40.9.235
  externalTrafficPolicy: Cluster
  ports:
  - name: 80-to-443-tcp
    nodePort: 31484
    port: 80
    protocol: TCP
    targetPort: 443
  - name: 3000-to-443-tcp
    nodePort: 30072
    port: 3000
    protocol: TCP
    targetPort: 443
  - name: 443-to-443-tcp
    nodePort: 32754
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: web
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - ip: 34.124.181.145
